@model Card

@{
    ViewBag.ModelTypeName = ViewData.ModelMetadata.ModelType.Name.Split('_')[0].ToLower();
    ViewBag.Title = (ViewBag.IsUpdate ? "Edit " : "Create ") + ViewBag.ModelTypeName;
}

@section AdditionalScripts
{
    @Scripts.Render("~/Areas/Admin/Scripts/_admin.js")
}

@{ Html.RenderPartial("_UploaderPartial", new ViewDataDictionary { { "uploadPath", "/" + ViewBag.ModelTypeName + "s" } }); }

@using (Html.BeginForm((ViewBag.IsUpdate ? "Edit" : "Create"), (string)ViewBag.ModelTypeName + "s", FormMethod.Post, new { isUpdate = ViewBag.IsUpdate }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Card</h2>
        <hr />
        @Html.ValidationSummary()
        
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Name)
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Image, "ImageUpload")
                @Html.ValidationMessageFor(m => m.Image)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@(ViewBag.IsUpdate ? "Update" : "Create")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
