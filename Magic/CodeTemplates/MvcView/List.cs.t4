<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "All your <#= ViewDataTypeName #>s";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>All your <#= ViewDataTypeName #>s</h2>
@Html.Partial("_MessagePartial")
<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<p>
    @Html.ActionLink("Add new", "Create")
</p>
<table class="table">
	</thead>
		<tr>
<#
	IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
	foreach (PropertyMetadata property in properties) {
		if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
			// This is a temporary work around until core scaffolding provides support for independent associations.
			if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
				continue;
			}
#>
			<th>
				@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
			</th>
<#
    }
}
#>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model) {
			<tr>
<#
			foreach (PropertyMetadata property in properties) {
			if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
			// This is a temporary work around until core scaffolding provides support for independent associations.
			if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
				continue;
			}
#>
			<td>
				@Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
			</td>
<#
		}
	}

	string pkName = GetPrimaryKeyName();
	if (pkName != null) {
#>
			<td>
				@Html.ActionLink("Edit", "Edit", item) |
				@Html.ActionLink("Delete", "Delete", item)
			</td>
<#
} else {
#>
			<td>
				@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
				@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
				@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
			</td>
<#
}
#>
		</tr>
}
	</tbody>
    <tfoot></tfoot>
</table>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>