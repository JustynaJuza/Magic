@{
    ViewBag.Title = "Game";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Welcome to the Game!</h2>
<div class="row">
    @Html.ActionLink("Start", "Start", "Game", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Pause", "Pause", "Game", null, new { @class = "btn btn-default" })
</div>


<div class="chat-container">
    <h3>Game</h3>
    <p class="form-horizontal form-group">
        @Html.TextBox("chat-message", null, new { id = "chat-message", @class = "form-control" })

        <input type="button" id="chat-send" class="btn btn-primary" value="Send" />
    </p>

    <div class="form-control chat-log" style="width: 500px; height: 200px; overflow: auto;">
        <ul id="discussion" style="list-style-type: none; margin:0px">
            @if (Model != null)
            {
                foreach (var message in Model.MessageLog)
                {
                    <li>@message.TimeSend.Value.ToString("hh:mm:ss") <strong>@message.Sender.UserName </strong> @message.Message</li>
                }
            }
        </ul>
    </div>
    </div>

@*----------------------------------------------------- SCRIPT -----------------------------------------------------*@
@Scripts.Render("~/bundles/jquerysignalR")
@Scripts.Render("~/signalr/hubs")
    <script>
        $(function () {
            $("#game-chat-send").prop("disabled", true);

            jQuery('#game-chat-message').on('input', function () {
                if (jQuery('#game-chat-message').val() == '') {
                    $("#game-chat-send").prop('disabled', true);
                }
                else {
                    $("#game-chat-send").prop('disabled', false);
                }
            })

            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;

            // Hub callback function.
            chat.client.addMessage = function (time, sender, senderColor, message, recipient, recipientColor) {
                $('#discussion').append('<li>' + time + ' <strong style="color:' + htmlEncode(senderColor) + '">' + htmlEncode(sender)
                    + '</strong> ' + (recipient != null ? ' <strong style="color:' + htmlEncode(recipientColor) + '">@@' + htmlEncode(recipient)
                    + '</strong> ' : '') + htmlEncode(message) + '</li>');
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#chat-send').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#chat-message').val(), "");

                    // Clear text box and reset focus for next comment.
                    $('#chat-message').val('').focus();
                });
            });
        });

        // Send messages on enter.
        $('#chat-message').keyup(function (e) {
            if (e.keyCode == 13) {
                $('#chat-send').toggleClass('clicked');
                $('#chat-send').trigger('click');
                $("#chat-send").prop("disabled", true);
            }
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }





    </script>
