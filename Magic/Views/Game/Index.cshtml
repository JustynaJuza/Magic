@using Microsoft.AspNet.Identity
@model GameViewModel

@{
    ViewBag.Title = "Game";
}

<style>
    .player-ready {
        font-weight: bold;
    }

    #game-timer {
        font: 18px bold;
    }

    #game-field {
        height: 300px;
        width: 90%;
        background: #f5f5f5;
        border: 2px solid black;
        margin: 5%;
        border-radius: 4px;
    }

    #game-field-overlay {
        position: relative;
        width: 100%;
        height: 100%;
        background: #b0c4de;
        -moz-filter: alpha(opacity=50);
        -o-filter: alpha(opacity=50);
        -webkit-filter: alpha(opacity=50);
        -ms-opacity: 0.5;
        filter: alpha(opacity=50);
        opacity: 0.5;
    }

    #game-field-overlay-message {
        height: auto;
        opacity: 1;
        width: 90%;
        bottom: 10px;
        position: absolute;
        left: 50%;
        margin-left: -45%;
        text-align: center;
        color: #000000;
    }
</style>


@*<h2>Welcome to the Game!</h2>*@
@Html.Partial("_MessagePartial")
@Html.HiddenFor(m => m.Id, new { id = "gameId" })

<div id="players-container">
    <ul id="players">
        @foreach (var player in Model.Players)
        {
            <li class="player display-name" style="color:#808080">@player.User.UserName</li>
        }
    </ul>
</div>

<div id="observers-container">
    <ul id="observers">
        @foreach (var user in Model.Observers)
        {
            <li class="observer display-name" style="color:#000000">@user.UserName</li>
        }
    </ul>
</div>

<div class="row">
    <div>
        <span id="game-timer">@(Model.TimePlayed)</span>
    </div>

    @if (ViewBag.IsPlayer != null)
    {
        @Html.Hidden("player", User.Identity.GetUserName(), new { id = "player" })
        <input type="button" id="player-ready-btn" class="btn btn-primary" value="@(Model.DateStarted.HasValue ? "Resume" : "Ready to start")" />
        //@Html.ActionLink("Start", "Start", "Game", null, new { @class = "btn btn-default", id="startGame"})

        <input type="button" id="game-pause-btn" class="btn btn-default disabled" value="Pause"/>
        <input type="button" id="game-pause-cancel-btn" class="btn btn-default" value="Unpause" style="display: none"/>   
        //@Ajax.ActionLink("Pause", "Pause", "Game", new { gameId = Model.Id }, new AjaxOptions { HttpMethod = "Post" }, new { id = "game-pause-btn", @class = "btn btn-default disabled" })
        //@Ajax.ActionLink("Unpause", "CancelPause", "Game", new { gameId = Model.Id }, new AjaxOptions { HttpMethod = "Post" }, new { id = "game-pause-cancel-btn", @class = "btn btn-default disabled" })
    }
    else
    {
        @Html.Hidden("observer", User.Identity.GetUserName(), new { id = "observer" })
    }
</div>


<div id="game-field">
    <div id="game-field-overlay">
        <div id="game-field-overlay-message">Awaiting game start...</div>
    </div>
</div>

@*----------------------------------------------------- SCRIPT -----------------------------------------------------*@
@section scripts
{
    @Scripts.Render("~/Scripts/_game.js")
}