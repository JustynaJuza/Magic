@model Card
@{ var i = 0; }

@Html.HiddenFor(m => m.Id)
@Html.HiddenFor(m => m.MultiverseId)

<div id="lastCall" class="narrow-container">
    <div class="property-editor">
        <div class="display-default">
            @Html.LabelFor(m => m.Title)
        </div>
        <div class="display-field">
            @Html.DisplayFor(m => m.Title)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(x => x.Title, new { @class = "textarea" })
            <input type="button" class="confirm-edit btn btn-info" value="OK!" />
        </div>
        @Html.ValidationMessageFor(m => m.Title)
    </div>
    
    <div id ="articles"class="container clearfix">
        @while (i < Model.Tiles.Count)
        {
            <div class="fullStory">
                <article>
                        @Html.EditorFor(m => m.Tiles[i], "SimpleTile")
                        @Html.ValidationMessageFor(m => m.Tiles[i])
                </article>
            </div>
            i++;
        }
    </div>

    <div class="container clearfix">
        <div class="partStory">
            <article>
                <blockquote>
                        <div class="property-editor">
                            <div class="display-default">
                                @Html.LabelFor(m => m.LeftQuote)
                            </div>
                            <div class="display-field">
                                @Html.DisplayFor(m => m.LeftQuote)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(x => x.LeftQuote, new { @class = "textarea" })
                                <input type="button" class="confirm-edit btn btn-info" value="OK!" />
                            </div>
                            @Html.ValidationMessageFor(m => m.LeftQuote)
                            </div>
                </blockquote>

                <div class="dash">&mdash;</div>

                <h4>
                    <div class="property-editor">
                        <div class="display-default">
                            @Html.LabelFor(m => m.LeftQuoteAuthor)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(m => m.LeftQuoteAuthor)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(m => m.LeftQuoteAuthor, new { placeholder = "Quote author" })
                            <input type="button" class="confirm-edit btn btn-info" value="OK!" />
                        </div>
                        @Html.ValidationMessageFor(m => m.LeftQuoteAuthor)
                    </div>
                </h4>
            </article>
        </div>

        <div class="partStory">
            <article>
                <blockquote>
                        <div class="property-editor">
                            <div class="display-default">
                                @Html.LabelFor(m => m.RightQuote)
                            </div>
                            <div class="display-field">
                                @Html.DisplayFor(m => m.RightQuote)
                            </div>
                            <div class="editor-field">                                
                                @Html.TextBoxFor(x => x.RightQuote, new { @class = "textarea" })
                                <input type="button" class="confirm-edit btn btn-info" value="OK!" />
                            </div>
                            @Html.ValidationMessageFor(m => m.RightQuote)
                        </div>
                </blockquote>

                <div class="dash">&mdash;</div>

                <h4>
                    <div class="property-editor">
                        <div class="display-default">
                            @Html.LabelFor(m => m.RightQuoteAuthor)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(m => m.RightQuoteAuthor)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(m => m.RightQuoteAuthor, new { placeholder = "Quote author" })
                            <input type="button" class="confirm-edit btn btn-info" value="OK!" />
                        </div>
                        @Html.ValidationMessageFor(m => m.RightQuoteAuthor)
                    </div>
                </h4>
            </article>
        </div>
    </div>
</div>

<script>
    $('#articles .editor-field').show();
</script>